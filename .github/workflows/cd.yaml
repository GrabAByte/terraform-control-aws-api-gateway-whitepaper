---
name: CD
on:
  push:
    branches:
    - main
    - feat/environment_approval

permissions: write-all

jobs:
  apply-development:
    runs-on: ubuntu-22.04
    uses: GrabAByte/github-devops-workflows/.github/workflows/terraformApply.yml@v1.2.0
    secrets:
      account: ${{ secrets.AWS_ACCOUNT_DEV }}
      role: ${{ secrets.AWS_ROLE_DEV }}
    with:
      region: eu-west-2
      terraformPath: .
      terraformVars: environment/development/terraform.tfvars
      workspace: development
    environment: development

  test:
    name: Test
    runs-on: ubuntu-22.04
    steps:
    - name: Check out the codebase.
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT }}:role/${{ secrets.AWS_ROLE }}
        aws-region: eu-west-2

    - name: Test
      run: |

        # initialize
        terraform init && \
        terraform workspace select development && \

        # smoke test
        API_URL=$(terraform output -raw api_url)
        IMAGE_FILE="tom-richards.jpg"
        BEARER_TOKEN=$(shuf -er -n16 {a..z} {0..9} | tr -d '\n')

        cd ./test && \
        ./api-call.sh "${API_URL}" "${IMAGE_FILE}" "${BEARER_TOKEN}"

    needs: [apply-development]

  # only one legitimate environment, so tag at development on successful apply
  semantic-release:
    uses: GrabAByte/github-devops-workflows/.github/workflows/semanticRelease.yml@v1.2.0
    needs: [apply-development, test]

  apply-pre-production:
    runs-on: ubuntu-22.04
    uses: GrabAByte/github-devops-workflows/.github/workflows/terraformApply.yml@v1.2.0
    secrets:
      account: ${{ secrets.AWS_ACCOUNT_PRE }}
      role: ${{ secrets.AWS_ROLE_PRE }}
    with:
      region: eu-west-2
      terraformPath: .
      terraformVars: environment/pre-production/terraform.tfvars
      workspace: pre-production
    needs: [apply-development, test, semantic-release]
    environment: pre-production

  apply-production:
    runs-on: ubuntu-22.04
    uses: GrabAByte/github-devops-workflows/.github/workflows/terraformApply.yml@v1.2.0
    secrets:
      account: ${{ secrets.AWS_ACCOUNT_PROD }}
      role: ${{ secrets.AWS_ROLE_PROD }}
    with:
      region: eu-west-2
      terraformPath: .
      terraformVars: environment/production/terraform.tfvars
      workspace: production
    needs: [apply-development, test, semantic-release, apply-pre-production]
    environment: production
